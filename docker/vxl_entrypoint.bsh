#!/usr/bin/env bash

set -eu

source "${VSI_COMMON_DIR:-/vsi}/linux/just_env" "${VXL_SOURCE_DIR-/src}/vxl.env"

if [ "${ALREADY_RUN_ONCE+set}" != "set" ]; then
  # create the user and associated groups and handle nfs symlinks

  # Setup the container to be more friendly to non-root users and
  # add other advanced J.U.S.T. features
  JUST_DOCKER_ENTRYPOINT_CHOWN_DIRS="${JUST_DOCKER_ENTRYPOINT_INTERNAL_VOLUMES-}" \
  JUST_DOCKER_ENTRYPOINT_CHMOD_DIRS="${JUST_DOCKER_ENTRYPOINT_INTERNAL_VOLUMES-}" \
  /usr/bin/env bash /vsi/linux/docker_entrypoint.bsh

  # - JUST_DOCKER_ENTRYPOINT_CHOWN_DIRS - automatically chown all files in the
  #   volumes listed to match the user. This could be slow with many files, but
  #   it only executes when the volumes permissions are bad. If you don't
  #   need this feature, save time by removing the
  #   JUST_DOCKER_ENTRYPOINT_CHOWN_DIRS line, but leave rest.
  # - JUST_DOCKER_ENTRYPOINT_CHMOD_DIRS - non-recursively chmod the directories
  #   listed to 777 so that any initial ownership issues are avoided. Can also
  #   be disabled by removing the JUST_DOCKER_ENTRYPOINT_CHMOD_DIRS line
  # These two features give volumes a much more desirable default behavior for
  # non-root users. Add any other custom behavior here.

  # Rerun entrypoint as user now, (skipping the root part via ALREADY_RUN_ONCE)
  ALREADY_RUN_ONCE=1 exec gosu ${DOCKER_USERNAME} /usr/bin/env bash $0 ${@+"${@}"}
fi

function sudo()
{
  gosu root ${@+"${@}"}
}
export -f sudo

source "${VSI_COMMON_DIR}/linux/docker_functions.bsh"
# Remove duplicate VXL_*_DOCKER variables
filter_docker_variables


# default CMD
if [ "$1" == "compile" ]; then
  pushd ${VXL_BUILD_DIR}
  if [ ! -f .cmake_ran ] || [ "${VXL_FORCE_RUN_CMAKE-}" == "1" ]; then
    cmake -G Ninja ${VXL_SOURCE_DIR} -DCMAKE_BUILD_TYPE=${VXL_BUILD_TYPE} -DCMAKE_INSTALL_PREFIX=${VXL_INSTALL_DIR}
    touch .cmake_ran # Mark that the build files have successfully been created
  fi
  ninja
  popd
elif [ "$1" == "test" ]; then
  :
elif [ "$1" == "nopipenv" ]; then
  shift 1
  exec "${@}"
else
  exec pipenv run "${@}"
fi
